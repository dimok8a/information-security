# Функция подставляет пробел через каждые 2 символа
def insert_space_every_two_characters(input_string):
    result = ' '.join(input_string[i:i + 2] for i in range(0, len(input_string), 2))
    return result

text = "HFDDECIKMMMALBCKMEDJJKOPHJAHLCIEHFNEIMGOCPKFNMDFAJLNIEAOFHOHFHONOIJDCPAJEDMFHMAAMCONCEOAOPMCJNGONAAHAIFDGNALHFCHONOEDPIBHEDBBHNKKICNFOGBIJHPOKNFAALKIBIIOEOFFNBOMELNNNFFAEOHPAHHOIHBBHJJEBEBHMKAFGFHHICLAHCMFAOMMEFBDIGMAPDEENHFMEJBCBCOILMPDOKKCKBNAMIAOIAGCNBOMENGHLHNIFCKLKIHOIJJEDCAAEIPNNFPHFDGILAGJCKMDEIANAHACFHAAOMIEFICAJFAIMABGCONHFINHFEPIHAFEEKMGMKAKIDENMHJADBBEFEDMCDCGKINJNFPHAEKAADKCJEGEEFJPMLIIHIDGEAPIGFBIONANOOHIKAHICKOCKCACHCLIHGIJIKFBABFAJHEAENOPHNBJDIFCCPOHFAEBBCGIECANAGJJLAPAFEFENCFFGAEIFCIAAKDDANKAAHBKJMNKCKFGKAFKIIKAEPKMNANIFDDFGADEPJCINMBNOFAMCJBJCEPHPABHCJMAADCGJEJEKACEMDMCDGJHIAKGIMCGACJKIKPFFCJAAHDJABMMCFKOHGFEMNEEMLFAADKFEKCIHHJPOMCMCPLODEKIANBBKFIKKDFOFIBAOOJIAGKKIHHFAPPCHHNDMLDOIDMAPPJIKAPMOLDMECMPLFLOJDFOOKHMEKGJFCEIEAHNOCKAACBIBEHIPODNONMCHJOAFABKMNEPCMANAKMKKHFAGCLMFIDAAKPAAJHAPNOFNJECHLLEIFIAIMDEADHAAGDHABEHDHHCDHEHFGOEMIBHGMCICCKAJBEIIEGNNOMAOEMMCAOIFAEBBKNIEGANAHJGNHOOFFPONGCKIHCCPPEIMMICOHDAANLKCGCNLJKKFJNNAOOIFJEAHOBBACADPJMEAIDKPMMPKEKNOMFHDAEEJCHPMKAAJALMBHDOCFNIOCHMCNCGAAIHMFOCDJAFGOIECACHAMMNCDNKCAPEFIFDBMBPDLOOIIHHPOLCADFOMMNHHABEGIMANMKMAPKPCPCIDAMHCOHDCPNAAOFHIHNBCHOEEEDHFIDPLIPHHDBMCKONAJNPIOGEFDBNMGNFNBEJACMIOEAEOLMNADHOCOJAHNEHAFNCHKGAPHPADNCGAAHDPIMIDIHFHKNGHCOCDIBAGAHJGJLEEBAPOKNABEGAIJOJJCGONHFIAAMAGODMJLAFACPICIHFDOKFHLOAACDOAJCEIPDJIHEBKAJAEEAAJJAOJBGFMKMCBGDAPMDAAPFKICNHBAFGHCDBNJAOIBMEJNFOMIIPOHOAAABHDIBABDPNAGOKIKFHCJJIFDKCOAAKIAAFCGLEDHPPMDFAGKCEAAGJDGKJENAFGGPMEAOBFFHBFIAAAKMGPGOCKFHFMJNNOIDIJJKAOKFFNAAAAADOMJLFFPBIHOEEJDGPIGBEHHIKGDHFMCECGGMABMBAAPFMCGJAIADGKNCANMADPIFEAIIHPMBLDDKHFDIGAIDGBNPOFEKNAPEIEHDAKOELAFFDPOHNHIJKAFCEKLKDHCCABIJOMAIDEOOFAHNHEAOHEDMDCINKIEBHMKDALDKINJCFGDMPPIEAKDLEALKNABAPACBIMDGCOPKFNJLAMCAIIABCOLMAJJJGCIDOLFBANDKNAMMCFJFHOMBICKAHHGLPOOCGCDNFFEOOIPHEMJMEEMDOMEAKIBLNJHDACOIHAMHKINBCKPCANMFIAKBKICAEBFDOMIKJNJHBMCBGCACJMFFBEEAOIJDJDPDACAILNDDNADKNMHEDAOPLDBCEJABAAHPIEACIKJDDPDMIPEDHDKAHNDMMCABCBOOHAMDBCJOEBLIJJAEOFEPGNHNMCHECCDOAHMCKALBLDLPKMICOCJPBNFKOIKBJNOKIGAJIONEMCIPOAFMIHNKCFBHEJNAAMBNAAAADNPEOIFMKBHFLIKMOAMCFGBMIEPLABOBDNJDNOAPAACOEHNLBIJMAACAEKJJBPOMNEAEDPICIKCFIMKMPOEMONJBENKADHMEKLIONOIAAICOHENFDCEMAACIHJJHBMNLHEEEDPIBIAHOEBOOAMGCNOGHAMCKJONAFALMKIJNHMAIBAHDOEPANADDCAHFECPAEMNCNGDFANINIBAIKOMOAAKPHKIMEDDBLOGKDDLMICIHJPOPLAOKOILCABAIKCFFLCAAOIBDKKJHAICMGAGANAPIAAHBACFEMADCKILFHMHGDJDMMDDCHHLPIEAFONKDAODAMEFPHDFMNNCDNOJHDPHHICAMDKOBFDGNAAJGOANBCKNPFMLFHHCNJLOMHCADLCAOAAAFDKENMMDAEFFMHHDBHCOCHAHILCJOKIAPFFHCIMHAFOJCAAIBFAIHOIHGDNAOMCKEOKEBIGNLIKGICHCHIJHBACKKNAOHHFJNJBIAGIAMOFAONALGJIOIIFEDMOGNAJCIIMOEABODOAEOKIHPNGGPCFBBIKEFKIBHCCPBAPMGJNJDKIAJDDAONEDBFFHADHBAJAIPHOAMECNKAAHCOBEJIENFMKJMOICBCIPDIDKFDKCDFGGNFJCOEHHFHMKMHFEFICAOIBKGAKCAAJBPIDJCEHKICMEAFGJNEKAHEJMBOIAAOIBCOHJDKENHFCKAAABGICJMIDKEKOOEKIAKKCFMCKKJCMHHONIMAHNCIONMNKMBMCPONCIKPHFAPDCOAJENAAAKANNPMAHFFGOMEBIHCKMONKKOAJDDMLNAPCFPADIFFGBNEDABEKMBCMJAOIBGGOHBHAFCACFCOIOEIGHNIBOIMKLCMCLKIIAEJCKPAEJAOILFAHJHGBAGJFCACHIPIOIJDLKCCDBKHFEJAOIENCAPNOBKAJKCAMALICNCHOHADPPFEBENCDMJCMNMFMKMKAJDJCCCEAAAOOMCJKHMANAJOAGHKIKAFGGBODHOFNEFOEODAEAFGFABENBAFAIMOFEBHFOEKCHMFGADABNCPPNJLDHFAAOHOAEKGMNOCFLMONMMIKNIAPKIJNKBMCKEGEAOEIFHMIJAFGMNEFAKHEMBDCCNKCDHEKIDDPMPCDKOKIIJEGOLCBINBMBNHHKBEFIHAMMNIAJKPCACIMAKHNOLKCCNMCCDOHAEIJOHMODAMCFOGPEKEBFMPDLMAJLIJNEHFCAGFHKMOIFMALALIFFEHKCAAJDDBJEEHBECCDAMMCAFNPALPOFNNDPNKKCICPIBACMMCACKAJCDIGAAGBKFBFBNNAFFAPOHFEAMPHENAACACAAEJBMDNABNMEDPGHFNIAFAOKMHKIMHDJOKCNLCKMMNCHKAHNEPDLDBKDFMMCBBOFJNAKNNNNLAAAHKCBHNIDCMCKDDAJCOGCINHAFFHCKKAAHDLAGDEBAPDMLNMEBNNFKGIPOAHKCKHHBPIMADAMKFINCAJKBFOLAENEOFDOAANODGIECLHJKCDCNMMCKNINANHNKFIDNANAPGPMFEHPDPMCDHHHPNPAAKAADAJNLAFMAEAKJNAKAFMNLAKINMGCHFHAFADHDCAJIJINFLIJOOLOBHAACEJEAGOPABJNJNDPBGEJAEAEMAMNOAJPLHPEJLGPJCOFJANAKJHJOOAPDBPAPNAJHFICACHPODJHLNCDBAFJAAPEOCMJAAAAMEDMGOKGDHBBDAOIKHAPAKGAAKENJAMEPINNHGHCOPCHNCCHKIEIHJIMMHEKMHDPONIOEGNBOAIOEMAAJAAJALPFFFGDMNMEDBHMFDAOCIBNHHAJENIFEFOHOCGEGMNOMEIMAFEPKPHMHAAJNMJLEIHBAAOCCMKIMCAHDHILAFAKFDCHFMEFEPHFMKBHCMDHJAAIIAPDNCPDCKAAMHFDFBACHPEAJHAJMFELECIFMINKAIOOLDCBAJMGMAMGBAEOEKJEEAHMAKEHMMAADIHFEDIMHLJKGMHFLAENIDHBMJJCGKAJGHINEJNNOKBOAMBDJJCEALENMMBMDAKIFDDCOCCFLCCMJNEOLAIDILKMODIJLOHFDECEIIJNMHMADFIEFJALIEOKADNNCKMEOMHGHIILCBKKBHOIEBIPCJADOIPNOPNAJCHAOOABCCJAFNAJBGAAINNINGCOFOAJPFICNCPKKHADNFFAJEHBIPAMDFOABOOIPCPFJBECDHNMJAKILGKKAPIOKGIKNANAHDJFGKCAACNMGFNOHNOKFHIMOADKGHNAECANJEADAPPAFAMEEBHBCKFHDOFHKMBNOMJAPFAKANFAPJAAADOEHAICNCDKIDDPEOEFMBHGMGLCAFKIALFPCDAAHNHALMMCOIOHGBEMNIJMGFDDKDEFDFIJMFDKKLNAMFJAHJHGACGCNDKIAADEODCKDJLMDNCCOGHPANIPCMLKJAFGDPAAJEIDNBCKHAAAJGCIIIACMDHABOCHGMAEDOMLNEIFJDAABPHEIEPECHJDBKNAHDPMOLEHJMGMLEJPEBAEODELAAIDFODPOMNKIIHDFNJCFKAAAJFNFEAFHACABHKIHPNDKCMKOFFFCCDJMEOEAJEAOFFMNAAJNBIEMAHFOFHDDFOIOEAFABINANOOIADPANDGIBHNDNHNNKOIAKIGHKAIOFENNCFAMAACIGAHAPCANOEOFPIIAFCGOPICBNMCBEOCGICPNEOMMFKIECAADJIIAMEKADKIFJOPPLKKNEEKDDOIDDAGAGACAHHNEALIMLBMKCIEEKIKHKMEEPJAPCFFAMCHDDAAPPICIJIEOMJOAOAAHFFJIAHPHIEDKOAJLBMMEIILFHDKHIMEKOHGIEAJCCKALCAJHEIMAPHJOJKDDNAAJCHIMJIBHMHOHGDPIKEKCKIMMCCKFMNANMAHHHALFEAAHCKIHEHKHGDADFLDMCHHIKHFANAMCEDNMAOIEDFBGCICHMNKJFNODFAHIIJPNMOAKOAAJPHFFMAENIOAEHNAPPHBNOOBHGIOPOFGNJCEOEEJMGLMGEIEABAGIAOAAFJNGKMEEFHPHJIFCOBKLHOIFAIFCLAHONJNAPFMCBPCKAABDLAAFKHFDPMMAPAJFPONHAONKHEKECFGMNEHGMAABKIBANJDOBJAJNHFHGIGAPAHKDCFBAFMFIAAJMEEAHOIBAAJBJDKEEENDMMOFMEBHKMMIIHBGBPCCOOIFICDECAFMDIAPOLDEOKBIBPCOAHDJKCHGNCOEINPMCAOEMEBADAJALOIAAJNKNMEAAHOHBIHCBDKOHOILKBLCMAOEGNNIPCHANIEHIAOOLFAPHDPFCAFELFJNNHHHMAACHIKOHABKPIAANKICPKFFHCNKDOMIHONBIEONBIEMMNKEBJPAIAHIMJIAFHAJODPBENAIJLDFMHABKEJBHAKIHOOAGKELOALDMHBAOAPCPPNBAMCINOCNBAPNFONCBAAAIIGBMAJKPKNIECHCPAOEDHHNMKHKMEBHDAJICCDANCPEOJLLOEPANMCMJFHDAMCHMPGIJKCDADCLKNAOHODFJIHNJCKPHGMNAAPIFIMAAHOHOFAMNODENHIOIJCGMFGJPAENLPFNEJDMFAAOCHJMMGMNBOFDFDPFKILHAENOHMMDCNOANIFCAJDKAJAOMKIGHHHAHEEHCJILANALNCAHHEDPDAMBCAAFHINIFIJKKOOBOFAAJADAKOFNDLNANAANBHBIIPFCAADJONAMIPKOJECJGFMIEMENIAIEDEJAEODMMOINEBMPNFMEPJHPDMEILANIKJPAFFANOAADAOAAGJFNAJAONMECFCLJGILKDDKAAIEMGAIMPJLACCAHFCKLMIPCJIFKCNOFMHFIKIEAFNPKBCOIAOOJENGHNIBBFHKPCAJFJIBJKEBKDDMAAKKKKIPAMELKNCIOAKKOAMENOHAFONCDFCHNBICHPAPKEOAIHHFOMAKIJGCAMMFCOPCFNIDAFJFOCBALNMCFHOGGMCFNKIMEFAAMAIPEOIMCBHKCIDHINAFHFEJNNHMACOIHFGCIEJLNMCAEOMBBFBHBABLMHIMGM"

# Убираем ничего не значащие символы и ставим все символы в правильный порядок
clear_text = ""
for i in range(0, len(text), 16):
    clear_text += text[i + 8] + text[i + 13] + text[i + 6] + text[i + 15] + text[i + 1] + text[i] + text[i + 4] + text[
        i + 10]

# Ставим пробел через каждые 2 символа
decrypt_result = insert_space_every_two_characters(clear_text)

# Заменяем пары символов на символы согласно таблице
# Символ "_" означает пробел
decrypt_result = decrypt_result.replace("AA", "_")
decrypt_result = decrypt_result.replace("BM", "*")
decrypt_result = decrypt_result.replace("AN", "а")
decrypt_result = decrypt_result.replace("BE", "я")
decrypt_result = decrypt_result.replace("CH", "р")
decrypt_result = decrypt_result.replace("CK", "ч")
decrypt_result = decrypt_result.replace("CM", "с")
decrypt_result = decrypt_result.replace("DP", "л")
decrypt_result = decrypt_result.replace("EB", "я")
decrypt_result = decrypt_result.replace("EM", "е")
decrypt_result = decrypt_result.replace("FG", "т")
decrypt_result = decrypt_result.replace("FH", "в")
decrypt_result = decrypt_result.replace("FM", "ц")
decrypt_result = decrypt_result.replace("GF", "т")
decrypt_result = decrypt_result.replace("HC", "р")
decrypt_result = decrypt_result.replace("HF", "Н")
decrypt_result = decrypt_result.replace("HH", "п")
decrypt_result = decrypt_result.replace("IK", "о")
decrypt_result = decrypt_result.replace("IO", "и")
decrypt_result = decrypt_result.replace("KC", "х")
decrypt_result = decrypt_result.replace("KI", "о")
decrypt_result = decrypt_result.replace("KK", "б")
decrypt_result = decrypt_result.replace("MB", "С")
decrypt_result = decrypt_result.replace("MC", "с")
decrypt_result = decrypt_result.replace("ME", "е")
decrypt_result = decrypt_result.replace("MF", "ы")
decrypt_result = decrypt_result.replace("NA", "а")
decrypt_result = decrypt_result.replace("NO", "д")
decrypt_result = decrypt_result.replace("OI", "и")
decrypt_result = decrypt_result.replace("ON", "к")
decrypt_result = decrypt_result.replace("OO", "у")
decrypt_result = decrypt_result.replace("OE", "ш")
decrypt_result = decrypt_result.replace("PE", "л")
decrypt_result = decrypt_result.replace("JA", "н")
decrypt_result = decrypt_result.replace("DD", "г")
decrypt_result = decrypt_result.replace("CP", "ц")
decrypt_result = decrypt_result.replace("EI", "й")
decrypt_result = decrypt_result.replace("AF", "з")
decrypt_result = decrypt_result.replace("HD", "м")
decrypt_result = decrypt_result.replace("JE", ",")
decrypt_result = decrypt_result.replace("NB", "ж")
decrypt_result = decrypt_result.replace("PD", "л")
decrypt_result = decrypt_result.replace("NF", "ь")
decrypt_result = decrypt_result.replace("HI", "э")
decrypt_result = decrypt_result.replace("CC", "ф")
decrypt_result = decrypt_result.replace("HN", "Б")
decrypt_result = decrypt_result.replace("IF", "ё")
decrypt_result = decrypt_result.replace("EO", "В")
decrypt_result = decrypt_result.replace("DC", "1")
decrypt_result = decrypt_result.replace("AJ", "0")
decrypt_result = decrypt_result.replace("EG", "–")
decrypt_result = decrypt_result.replace("MH", "–")
decrypt_result = decrypt_result.replace("OP", "2")
decrypt_result = decrypt_result.replace("GA", "3")
decrypt_result = decrypt_result.replace("BF", "6")
decrypt_result = decrypt_result.replace("GH", "7")
decrypt_result = decrypt_result.replace("PH", "5")
decrypt_result = decrypt_result.replace("PB", "М")
decrypt_result = decrypt_result.replace("DB", "Я")
decrypt_result = decrypt_result.replace("DL", "-")
decrypt_result = decrypt_result.replace("LA", "П")
decrypt_result = decrypt_result.replace("KO", "О")
decrypt_result = decrypt_result.replace("ED", "щ")
decrypt_result = decrypt_result.replace("KB", "4")
decrypt_result = decrypt_result.replace("PJ", "ю")
decrypt_result = decrypt_result.replace("FO", "9")
decrypt_result = decrypt_result.replace("JD", "Р")
decrypt_result = decrypt_result.replace("MG", ";")
decrypt_result = decrypt_result.replace("IL", "ъ")
decrypt_result = decrypt_result.replace("IC", "Г")
decrypt_result = decrypt_result.replace("LJ", "Ч")
decrypt_result = decrypt_result.replace("GN", ".")
decrypt_result = decrypt_result.replace("KJ", "К")
decrypt_result = decrypt_result.replace("CF", "(")
decrypt_result = decrypt_result.replace("HM", ")")

# Убираем все пробелы
decrypt_result = decrypt_result.replace(" ", "")
# Заменяем _ на пробелы
decrypt_result = decrypt_result.replace("_", " ")
print(decrypt_result)


# Венгрия*
# EO EM HF DD HC IO BE
# 'EO': 'В', 'EM': 'е', 'JA': 'н', 'DD': 'г', 'HC': 'р', 'IO': 'и', 'BE': 'я'